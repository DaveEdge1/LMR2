name: Docker Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  IMAGE_NAME: lmr2-cfr

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}
          type=sha

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        load: true
        tags: ${{ env.IMAGE_NAME }}:test
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Test - Verify environment
      run: |
        docker run --rm ${{ env.IMAGE_NAME }}:test conda run -n cfr-env python -c "
        import sys
        import numpy as np
        import pandas as pd
        import xarray as xr
        import netCDF4
        import scipy
        import matplotlib
        import cartopy
        import cfr
        print('âœ“ All core packages imported successfully!')
        print(f'Python: {sys.version}')
        print(f'NumPy: {np.__version__}')
        print(f'Pandas: {pd.__version__}')
        print(f'xarray: {xr.__version__}')
        print(f'CFR: {cfr.__version__}')
        "

    - name: Test - Check Python version
      run: |
        docker run --rm ${{ env.IMAGE_NAME }}:test conda run -n cfr-env python --version

    - name: Test - List installed packages
      run: |
        docker run --rm ${{ env.IMAGE_NAME }}:test conda run -n cfr-env conda list

    - name: Push Docker image to registry
      if: github.event_name != 'pull_request'
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Image digest
      if: github.event_name != 'pull_request'
      run: echo ${{ steps.meta.outputs.tags }}
